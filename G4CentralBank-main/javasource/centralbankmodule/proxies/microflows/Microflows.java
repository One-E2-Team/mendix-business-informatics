// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package centralbankmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the CentralBankModule module
	public static centralbankmodule.proxies.DocumentAccountsStateByDayReport accountsStateByDayReport(IContext context, centralbankmodule.proxies.DocumentAccountsStateByDayReport _documentAccountsStateByDayReport)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DocumentAccountsStateByDayReport", _documentAccountsStateByDayReport == null ? null : _documentAccountsStateByDayReport.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("CentralBankModule.AccountsStateByDayReport").withParams(params).execute(context);
		return result == null ? null : centralbankmodule.proxies.DocumentAccountsStateByDayReport.initialize(context, result);
	}
	public static void bankBillingAccountStatusReportPage(IContext context, centralbankmodule.proxies.BillingAccount _billingAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BillingAccount", _billingAccount == null ? null : _billingAccount.getMendixObject());
		Core.microflowCall("CentralBankModule.BankBillingAccountStatusReportPage").withParams(params).execute(context);
	}
	public static void clearing(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("CentralBankModule.Clearing").withParams(params).execute(context);
	}
	public static void closeAccount(IContext context, businessbankmodule.proxies.Account _account, java.lang.String _transferTo)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		params.put("transferTo", _transferTo);
		Core.microflowCall("CentralBankModule.CloseAccount").withParams(params).execute(context);
	}
	public static void commitTransferMessage(IContext context, businessbankmodule.proxies.TransferMessage _body, java.lang.String _swiftcode)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("body", _body == null ? null : _body.getMendixObject());
		params.put("swiftcode", _swiftcode);
		Core.microflowCall("CentralBankModule.CommitTransferMessage").withParams(params).execute(context);
	}
	public static void exportTestToFile(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("CentralBankModule.ExportTestToFile").withParams(params).execute(context);
	}
	public static centralbankmodule.proxies.BankBillingAccountStatusReport generateBankBillingAccountStatusReport(IContext context, centralbankmodule.proxies.BillingAccount _billingAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BillingAccount", _billingAccount == null ? null : _billingAccount.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("CentralBankModule.GenerateBankBillingAccountStatusReport").withParams(params).execute(context);
		return result == null ? null : centralbankmodule.proxies.BankBillingAccountStatusReport.initialize(context, result);
	}
	public static java.util.List<businessbankmodule.proxies.TransferMessage> getAllTM10xForBillingAcount(IContext context, centralbankmodule.proxies.BillingAccount _billingAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BillingAccount", _billingAccount == null ? null : _billingAccount.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("CentralBankModule.GetAllTM10xForBillingAcount").withParams(params).execute(context);
		java.util.List<businessbankmodule.proxies.TransferMessage> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(businessbankmodule.proxies.TransferMessage.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<businessbankmodule.proxies.TransferMessage> getCurrentAllTM10xForDocumentBankBillingAcountStatusReport(IContext context, centralbankmodule.proxies.DocumentBankBillingAccountStatusReport _documentBankBillingAccountStatusReport)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DocumentBankBillingAccountStatusReport", _documentBankBillingAccountStatusReport == null ? null : _documentBankBillingAccountStatusReport.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("CentralBankModule.GetCurrentAllTM10xForDocumentBankBillingAcountStatusReport").withParams(params).execute(context);
		java.util.List<businessbankmodule.proxies.TransferMessage> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(businessbankmodule.proxies.TransferMessage.initialize(context, obj));
		}
		return result;
	}
	public static void importTestFile(IContext context, centralbankmodule.proxies.XMLDocument _xMLDocument)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("XMLDocument", _xMLDocument == null ? null : _xMLDocument.getMendixObject());
		Core.microflowCall("CentralBankModule.ImportTestFile").withParams(params).execute(context);
	}
	public static void openImportPage(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("CentralBankModule.OpenImportPage").withParams(params).execute(context);
	}
	public static void pageAccountsStateByDayReport(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("CentralBankModule.PageAccountsStateByDayReport").withParams(params).execute(context);
	}
	public static void pDFAccountsStateByDayReport(IContext context, centralbankmodule.proxies.DocumentAccountsStateByDayReport _documentAccountsStateByDayReport)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DocumentAccountsStateByDayReport", _documentAccountsStateByDayReport == null ? null : _documentAccountsStateByDayReport.getMendixObject());
		Core.microflowCall("CentralBankModule.PDFAccountsStateByDayReport").withParams(params).execute(context);
	}
	public static void pDFBankBillingAccountStatusReport(IContext context, centralbankmodule.proxies.BillingAccount _billingAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BillingAccount", _billingAccount == null ? null : _billingAccount.getMendixObject());
		Core.microflowCall("CentralBankModule.PDFBankBillingAccountStatusReport").withParams(params).execute(context);
	}
	public static java.lang.String postAccount(IContext context, system.proxies.HttpResponse _httpResponse, businessbankmodule.proxies.Account _body)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("body", _body == null ? null : _body.getMendixObject());
		return (java.lang.String) Core.microflowCall("CentralBankModule.PostAccount").withParams(params).execute(context);
	}
	public static java.lang.String postClient(IContext context, system.proxies.HttpResponse _httpResponse, businessbankmodule.proxies.Client _body)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("body", _body == null ? null : _body.getMendixObject());
		return (java.lang.String) Core.microflowCall("CentralBankModule.PostClient").withParams(params).execute(context);
	}
	public static void sendBankBillingAccountStatusReport(IContext context, centralbankmodule.proxies.BillingAccount _billingAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("BillingAccount", _billingAccount == null ? null : _billingAccount.getMendixObject());
		Core.microflowCall("CentralBankModule.SendBankBillingAccountStatusReport").withParams(params).execute(context);
	}
	public static void test_Delete(IContext context, java.lang.Long _identificator, system.proxies.HttpResponse _httpResponse)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("identificator", _identificator);
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		Core.microflowCall("CentralBankModule.Test_Delete").withParams(params).execute(context);
	}
	public static java.util.List<centralbankmodule.proxies.Test> test_Get_All(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("CentralBankModule.Test_Get_All").withParams(params).execute(context);
		java.util.List<centralbankmodule.proxies.Test> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(centralbankmodule.proxies.Test.initialize(context, obj));
		}
		return result;
	}
	public static centralbankmodule.proxies.Test test_Get_ByKey(IContext context, system.proxies.HttpResponse _httpResponse, java.lang.Long _identificator)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("identificator", _identificator);
		IMendixObject result = (IMendixObject)Core.microflowCall("CentralBankModule.Test_Get_ByKey").withParams(params).execute(context);
		return result == null ? null : centralbankmodule.proxies.Test.initialize(context, result);
	}
	public static void test_Post(IContext context, system.proxies.HttpResponse _httpResponse, centralbankmodule.proxies.Test _body)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("body", _body == null ? null : _body.getMendixObject());
		Core.microflowCall("CentralBankModule.Test_Post").withParams(params).execute(context);
	}
	public static void testMT910(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("CentralBankModule.TestMT910").withParams(params).execute(context);
	}
	public static void transferMeesagePost(IContext context, system.proxies.HttpResponse _httpResponse, businessbankmodule.proxies.TransferMessage _body, java.lang.String _swiftcode)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("body", _body == null ? null : _body.getMendixObject());
		params.put("swiftcode", _swiftcode);
		Core.microflowCall("CentralBankModule.TransferMeesagePost").withParams(params).execute(context);
	}
}